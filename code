import random, curses

#represents a window object representing the screen
s = curses.initscr()
curses.curs_set(0)
snkh, snkw = s.getmaxyx()

#creates a new window of the sizes given to it
w = curses.newwin(snkh, snkw, 0, 0)
w.keypad(1)
w.timeout(100)

snk_x = snkw/4
snk_y = snkh/2
snake = [
    [snk_y, snk_x],
    [snk_y, snk_x-1],
    [snk_y, snk_x-2]
]

food = [snkh/2, snkw/2]
w.addch(food[0], food[1], curses.ACS_PI)

key = curses.KEY_RIGHT

#creating a infinite loop expecting for a key from the user
while True:
    next_key = w.getch()
    #if the key pressed is null dont do anything otherwise key
    key = key if next_key == -1 else next_key

    #code for ending the game or failure
    if snake[0][0] in [0, snkh] or snake[0][1]  in [0, snkw] or snake[0] in snake[1:]:
        curses.endwin()
        quit()
    
    new_head = [snake[0][0], snake[0][1]]#creates a new snake

    #key based movements
    if key == curses.KEY_DOWN:
        new_head[0] += 1
    if key == curses.KEY_UP:
        new_head[0] -= 1
    if key == curses.KEY_LEFT:
        new_head[1] -= 1
    if key == curses.KEY_RIGHT:
        new_head[1] += 1

    snake.insert(0, new_head)

    if snake[0] == food:
        food = None
        #using pi character for food and want it to appear at a place using randint()
        while food is None:
         #new food appearance
            nf = [
                random.randint(1, sh-1),
                random.randint(1, sw-1)
            ]
            food = nf if nf not in snake else None
        w.addch(food[0], food[1], curses.ACS_PI)
    else:
        tail = snake.pop()
        w.addch(tail[0], tail[1], ' ')

    w.addch(snake[0][0], snake[0][1], curses.ACS_CKBOARD)
